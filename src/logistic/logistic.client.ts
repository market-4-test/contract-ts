// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "logistic/logistic.proto" (package "logistic", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Logistic } from "./logistic";
import type { DeleteWarehousesResponse } from "./logistic";
import type { DeleteWarehousesParams } from "./logistic";
import type { UpdateWarehouseParams } from "./logistic";
import type { CreateWarehouseParams } from "./logistic";
import type { Warehouse } from "./logistic";
import type { GetWarehouseByIdParams } from "./logistic";
import type { GetWarehousesShortResponse } from "./logistic";
import type { GetWarehousesShortParams } from "./logistic";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetWarehousesResponse } from "./logistic";
import type { GetWarehousesParams } from "./logistic";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service logistic.Logistic
 */
export interface ILogisticClient {
    /**
     * @generated from protobuf rpc: GetWarehouses
     */
    getWarehouses(input: GetWarehousesParams, options?: RpcOptions): UnaryCall<GetWarehousesParams, GetWarehousesResponse>;
    /**
     * @generated from protobuf rpc: GetWarehousesShort
     */
    getWarehousesShort(input: GetWarehousesShortParams, options?: RpcOptions): UnaryCall<GetWarehousesShortParams, GetWarehousesShortResponse>;
    /**
     * @generated from protobuf rpc: GetWarehouseById
     */
    getWarehouseById(input: GetWarehouseByIdParams, options?: RpcOptions): UnaryCall<GetWarehouseByIdParams, Warehouse>;
    /**
     * @generated from protobuf rpc: CreateWarehouse
     */
    createWarehouse(input: CreateWarehouseParams, options?: RpcOptions): UnaryCall<CreateWarehouseParams, Warehouse>;
    /**
     * @generated from protobuf rpc: UpdateWarehouse
     */
    updateWarehouse(input: UpdateWarehouseParams, options?: RpcOptions): UnaryCall<UpdateWarehouseParams, Warehouse>;
    /**
     * @generated from protobuf rpc: DeleteWarehouse
     */
    deleteWarehouse(input: DeleteWarehousesParams, options?: RpcOptions): UnaryCall<DeleteWarehousesParams, DeleteWarehousesResponse>;
}
/**
 * @generated from protobuf service logistic.Logistic
 */
export class LogisticClient implements ILogisticClient, ServiceInfo {
    typeName = Logistic.typeName;
    methods = Logistic.methods;
    options = Logistic.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetWarehouses
     */
    getWarehouses(input: GetWarehousesParams, options?: RpcOptions): UnaryCall<GetWarehousesParams, GetWarehousesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetWarehousesParams, GetWarehousesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetWarehousesShort
     */
    getWarehousesShort(input: GetWarehousesShortParams, options?: RpcOptions): UnaryCall<GetWarehousesShortParams, GetWarehousesShortResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetWarehousesShortParams, GetWarehousesShortResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetWarehouseById
     */
    getWarehouseById(input: GetWarehouseByIdParams, options?: RpcOptions): UnaryCall<GetWarehouseByIdParams, Warehouse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetWarehouseByIdParams, Warehouse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateWarehouse
     */
    createWarehouse(input: CreateWarehouseParams, options?: RpcOptions): UnaryCall<CreateWarehouseParams, Warehouse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateWarehouseParams, Warehouse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateWarehouse
     */
    updateWarehouse(input: UpdateWarehouseParams, options?: RpcOptions): UnaryCall<UpdateWarehouseParams, Warehouse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateWarehouseParams, Warehouse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteWarehouse
     */
    deleteWarehouse(input: DeleteWarehousesParams, options?: RpcOptions): UnaryCall<DeleteWarehousesParams, DeleteWarehousesResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteWarehousesParams, DeleteWarehousesResponse>("unary", this._transport, method, opt, input);
    }
}
