// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "assistant/assistant.proto" (package "assistant", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Assistant } from "./assistant";
import type { GenerateContentByTextResponse } from "./assistant";
import type { GenerateContentByTextParams } from "./assistant";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetSuggestedTagsByTextResponse } from "./assistant";
import type { GetSuggestedTagsByTextParams } from "./assistant";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service assistant.Assistant
 */
export interface IAssistantClient {
    /**
     * @generated from protobuf rpc: GetSuggestedTagsByText
     */
    getSuggestedTagsByText(input: GetSuggestedTagsByTextParams, options?: RpcOptions): UnaryCall<GetSuggestedTagsByTextParams, GetSuggestedTagsByTextResponse>;
    /**
     * @generated from protobuf rpc: GenerateContentByText
     */
    generateContentByText(input: GenerateContentByTextParams, options?: RpcOptions): UnaryCall<GenerateContentByTextParams, GenerateContentByTextResponse>;
}
/**
 * @generated from protobuf service assistant.Assistant
 */
export class AssistantClient implements IAssistantClient, ServiceInfo {
    typeName = Assistant.typeName;
    methods = Assistant.methods;
    options = Assistant.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetSuggestedTagsByText
     */
    getSuggestedTagsByText(input: GetSuggestedTagsByTextParams, options?: RpcOptions): UnaryCall<GetSuggestedTagsByTextParams, GetSuggestedTagsByTextResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetSuggestedTagsByTextParams, GetSuggestedTagsByTextResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GenerateContentByText
     */
    generateContentByText(input: GenerateContentByTextParams, options?: RpcOptions): UnaryCall<GenerateContentByTextParams, GenerateContentByTextResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateContentByTextParams, GenerateContentByTextResponse>("unary", this._transport, method, opt, input);
    }
}
