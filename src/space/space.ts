// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "space/space.proto" (package "space", syntax proto3)
// tslint:disable
import { BlockEmployeeParams } from "./employees";
import { CheckEmployeeAvailableUsernameParams } from "./employees";
import { UpdateEmployeeParams } from "./employees";
import { CreateEmployeeParams } from "./employees";
import { GetEmployeesResponse } from "./employees";
import { GetEmployeesParams } from "./employees";
import { UpdatePermissionParams } from "./permissions";
import { CreatePermissionParams } from "./permissions";
import { GetPermissionsResponse } from "./permissions";
import { GetPermissionsParams } from "./permissions";
import { ToggleRoleToEmployeesParams } from "./roles";
import { DeleteRoleResponse } from "./roles";
import { DeleteRoleParams } from "./roles";
import { ValidationErrors } from "../common/common";
import { CreateRoleParams } from "./roles";
import { GetRolesResponse } from "./roles";
import { GetRolesParams } from "./roles";
import { Profile } from "./profiles";
import { GetProfileParams } from "./profiles";
import { ChangePasswordParams } from "./auth";
import { RefreshTokenParams } from "./auth";
import { AuthResponse } from "./auth";
import { LoginParams } from "./auth";
import { Status } from "../common/common";
import { AuthenticateParams } from "./auth";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service space.Space
 */
export const Space = new ServiceType("space.Space", [
    { name: "Authenticate", options: {}, I: AuthenticateParams, O: Status },
    { name: "Login", options: {}, I: LoginParams, O: AuthResponse },
    { name: "RefreshToken", options: {}, I: RefreshTokenParams, O: AuthResponse },
    { name: "ChangePassword", options: {}, I: ChangePasswordParams, O: Status },
    { name: "GetProfile", options: {}, I: GetProfileParams, O: Profile },
    { name: "GetRoles", options: {}, I: GetRolesParams, O: GetRolesResponse },
    { name: "CreateRole", options: {}, I: CreateRoleParams, O: ValidationErrors },
    { name: "UpdateRole", options: {}, I: CreateRoleParams, O: ValidationErrors },
    { name: "DeleteRole", options: {}, I: DeleteRoleParams, O: DeleteRoleResponse },
    { name: "AttachRoleToEmployee", options: {}, I: ToggleRoleToEmployeesParams, O: Status },
    { name: "DetachRoleFromEmployee", options: {}, I: ToggleRoleToEmployeesParams, O: Status },
    { name: "GetPermissions", options: {}, I: GetPermissionsParams, O: GetPermissionsResponse },
    { name: "CreatePermission", options: {}, I: CreatePermissionParams, O: Status },
    { name: "UpdatePermission", options: {}, I: UpdatePermissionParams, O: Status },
    { name: "GetEmployees", options: {}, I: GetEmployeesParams, O: GetEmployeesResponse },
    { name: "CreateEmployee", options: {}, I: CreateEmployeeParams, O: ValidationErrors },
    { name: "UpdateEmployee", options: {}, I: UpdateEmployeeParams, O: ValidationErrors },
    { name: "CheckEmployeeAvailableUsername", options: {}, I: CheckEmployeeAvailableUsernameParams, O: Status },
    { name: "BlockEmployee", options: {}, I: BlockEmployeeParams, O: Status }
]);
